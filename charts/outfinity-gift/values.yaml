# Default values for outfinity-gift.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Application Configuration. Will be put in ConfigMaps/Secrets
config:
  # -- The Vault domain, should be vault.company, e.g. vault.my-company
  vaultDomain: "vault.my-company"
  ssoSecretsEncryptionKey: "8d0BO3SUi1hLkuxYiw1Oo8fPRCSN/r0RknDXAYnhKro="
  stripeSecretKey: ""
  sendgridApiKey: ""
  stripePublicKey: ""
  # -- Enable Dev mode
  dev: "true"
  s3AccessKeyId: ""
  s3SecretAccessKey: ""
  # -- The outfinity-gift version
  overrides:
    # -- Option to explicitly override the config.json used for the vaultDomain instead of using the predefined template.
    # Note: Usually not required
    vaultDomainConfigJson: ""

    # -- Option to explitly override the env.json for APIHub instead of using the predefined template.
    # Note 1: Usually not required to override.
    # Note 2: If secretProviderClass.enabled=true, then this value is ignored as it is used/mounted from Secret Vault.
    envJson: ""

    # -- Option to explitly set the apihub.json instead of using the default from [https://github.com/pharmaledgerassoc/outfinity-gift/blob/v1.3.1/apihub-root/external-volume/config/apihub.json](https://github.com/pharmaledgerassoc/outfinity-gift/blob/v1.3.1/apihub-root/external-volume/config/apihub.json).
    # Note: If secretProviderClass.enabled=true, then this value is ignored as it is used/mounted from Secret Vault.
    # <br/>outfinity-gift-86d4f7878-jrbfw
    # Settings: [https://docs.google.com/document/d/1mg35bb1UBUmTpL1Kt4GuZ7P0K_FMqt2Mb8B3iaDf52I/edit#heading=h.z84gh8sclah3](https://docs.google.com/document/d/1mg35bb1UBUmTpL1Kt4GuZ7P0K_FMqt2Mb8B3iaDf52I/edit#heading=h.z84gh8sclah3)
    # <br/>
    # For SSO (not enabled by default):
    # <br/>
    # 1. "enableOAuth": true
    # <br/>
    # 2. "serverAuthentication": true
    # <br/>
    # 3. For SSO via OAuth with Azure AD, replace <TODO_*> with appropriate values.
    #    For other identity providers (IdP) (e.g. Google, Ping, 0Auth), refer to documentation.
    #    "redirectPath" must match the redirect URL configured at IdP
    # <br/>
    # 4. Add these values to "skipOAuth": "/leaflet-wallet/", "/directory-summary/", "/iframe/"
    apihubJson: ""

    # -- Centrally managed and provided BDNS Hosts Config.
    # You must set this value in a non-sandbox environment!
    # See [templates/_configmap-bdns.tpl](templates/_configmap-bdns.tpl) for default value.
    bdnsHosts: ""

s3AdapterConfig:
  port: 3000
  # -- The S3 Bucket Name
  bucketName: ""
  # -- The S3 Region
  region: ""
  # -- The S3 Endpoint
  endpoint: ""
  # -- The S3 Access Key ID
  accessKeyId: ""
  # -- The S3 Secret Access Key
  secretAccessKey: ""
  backupJournalFilePath: "/outfinity-gift/apihub-root/external-volume/backup/backup-journal.txt"
  watchList:
    - "/outfinity-gift/apihub-root/external-volume/versionlessdsu"
    - "/outfinity-gift/apihub-root/external-volume/lightDB"

# Runner settings
outfinityGift:
  image:
    # -- The repository of the container image for the runner
    # <!-- # pragma: allowlist secret -->
    repository: "assistos/outfinity-gift"  # pragma: allowlist secret
    # -- Image Pull Policy for the runner
    pullPolicy: Always
    # -- Overrides the image tag whose default is the chart appVersion.
    # Default to v1.3.1
    tag: "1.0.0-rc1"  # Note to developers: If you change this version also change appVersion in Chart.yaml
    # -- sha256 digest of the image.
    # Do not add the prefix "@sha256:"
    # Default to v1.3.1
    # <!-- # pragma: allowlist secret -->
    sha: "3fd47eab0604c4e73d1b2eca47503dcb4c99c3d481daae5b0e8f6e24d9c05d79"  # pragma: allowlist secret

  podAnnotations: { }

    # See `kubectl explain deployment.spec.strategy` for more and [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)
  deploymentStrategy:
    type: Recreate

  # -- Liveness probe.
  # See [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
  livenessProbe:
    httpGet:
      path: /ready-probe
      port: http
    initialDelaySeconds: 20
    periodSeconds: 20
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 5

  # -- Readiness probe.
  # See [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
  readinessProbe:
    httpGet:
      path: /ready-probe
      port: http
    initialDelaySeconds: 20
    periodSeconds: 20
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 10

  # -- Pod Security Context for the runner.
  # See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    # -- The SecComp configuration.
    # Not enabled by default as not every environment supports it.
    # [https://kubernetes.io/docs/tutorials/security/seccomp/](https://kubernetes.io/docs/tutorials/security/seccomp/)
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Security Context for the runner container
  # See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)
  securityContext:
    privileged: false
    capabilities:
      drop:
        - ALL
    # Running as readonly filesystem is currently (May 2022 with outfinity-gift v1.3.1) not possible.
    # Error:
    # API-HUB] Preparing to register middleware from path ./components/mqManager
    # Caught event type [uncaughtException]. Shutting down... uncaughtException Error: ENOENT: no such file or directory, mkdir '/ePI-workspace/apihub-root/messaging'
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false

s3Adapter:
  image:
    # -- The repository of the container image for the S3 Adapter
    repository: "assistos/s3-adapter"
    # -- Image Pull Policy for the S3 Adapter
    pullPolicy: Always
    # -- The Tag of the image for the S3 Adapter
    tag: "1.0.0-rc1"
    # -- sha256 digest of the image.
    # Do not add the prefix "@sha256:"
    sha: "3fd47eab0604c4e73d1b2eca47503dcb4c99c3d481daae5b0e8f6e24d9c05d79"

# Add this section to your values.yaml at the root level (same level as 'config:', 'outfinityGift:', etc.)

pdfConverter:
  enabled: true  # Set to true to enable the PDF converter
  image:
    repository: assistos/pdftohtmlconverter
    pullPolicy: Always
    tag: "1.0.0-rc1"
    sha: "5fc10a509c8535048761a05cf5a430361d84e7cd0072f30961675e98f92217e9"

  podAnnotations: {}

  deploymentStrategy:
    type: Recreate

  livenessProbe:
    httpGet:
      path: /ready
      port: http
    initialDelaySeconds: 20
    periodSeconds: 20
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    httpGet:
      path: /ready
      port: http
    initialDelaySeconds: 20
    periodSeconds: 20
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 10

  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

  securityContext:
    privileged: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

  persistence:
    enabled: true
    existingClaim: ""
    storageClassName: ""
    size: "10Gi"
    accessModes:
      - ReadWriteOnce
    selectorLabels: {}
    finalizers:
      - kubernetes.io/pvc-protection

  service:
    type: ClusterIP
    port: 3001
    targetPort: 3001

# Settings for Containers with kubectl installed used by Jobs "pre-builder", "pre-upgrade-volumesnapshot", "final-volumesnapshot" and "cleanup"
kubectl:
  # -- Time to keep the Job after finished in case of an error. If no error occured the Jobs will immediately by deleted.
  # If value is not set, then 'ttlSecondsAfterFinished' will not be set.
  ttlSecondsAfterFinished: 300
  image:
    # -- The repository of the container image containing kubectl
    repository: bitnami/kubectl
    # -- Image Pull Policy
    pullPolicy: Always
    # -- The Tag of the image containing kubectl. Minor Version should match to your Kubernetes Cluster Version.
    tag: "1.21.14"
    # -- sha256 digest of the image.
    # Do not add the prefix "@sha256:"
    # <br/>
    # Defaults to image digest for "bitnami/kubectl:1.21.14", see [https://hub.docker.com/layers/kubectl/bitnami/kubectl/1.21.14/images/sha256-f9814e1d2f1be7f7f09addd1d877090fe457d5b66ca2dcf9a311cf1e67168590?context=explore](https://hub.docker.com/layers/kubectl/bitnami/kubectl/1.21.14/images/sha256-f9814e1d2f1be7f7f09addd1d877090fe457d5b66ca2dcf9a311cf1e67168590?context=explore)
    # <!-- # pragma: allowlist secret -->
    sha: "bba32da4e7d08ce099e40c573a2a5e4bdd8b34377a1453a69bbb6977a04e8825"  # pragma: allowlist secret

  # -- Resource constraints for the pre-builder and cleanup job
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # -- Pod Security Context for the pod running kubectl.
  # See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
  podSecurityContext:
    runAsUser: 65534
    runAsGroup: 65534
    fsGroup: 65534
    # -- The SecComp configuration.
    # Not enabled by default as not every environment supports it.
    # [https://kubernetes.io/docs/tutorials/security/seccomp/](https://kubernetes.io/docs/tutorials/security/seccomp/)
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Security Context for the container running kubectl
  # See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)
  securityContext:
    privileged: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 65534
    runAsGroup: 65534

# Service Account for Builder and Runner
serviceAccount:
  # -- Specifies whether a service account should be created which is used by builder and runner.
  create: false
  # -- Annotations to add to the service account
  annotations: { }
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # -- Whether automounting API credentials for a service account is enabled or not.
  # See [https://docs.bridgecrew.io/docs/bc_k8s_35](https://docs.bridgecrew.io/docs/bc_k8s_35)
  automountServiceAccountToken: false

# -- Resource constraints for the builder and runner
resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

# Persistence settings by using Persistent Volume Claims for the external volume of builder and runner.
# See [http://kubernetes.io/docs/user-guide/persistent-volumes/](http://kubernetes.io/docs/user-guide/persistent-volumes/)
persistence:
  # -- The name of an existing PVC to use instead of creating a new one.
  existingClaim: ""
  # -- Name of the storage class for the new PVC.
  # If empty or not set then storage class will not be set - which means that the default storage class will be used.
  storageClassName: ""
  # -- Size of the volume for the new PVC
  size: "100Gi"
  # -- Boolean flag whether to delete the (new) PVC on uninstall or not.
  deleteOnUninstall: true
  # -- Finalizers for the new PVC.
  # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection)
  finalizers:
    - kubernetes.io/pvc-protection
  # -- AccessModes for the new PVC.
  # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
  accessModes:
    - ReadWriteOnce
  # -- Selector Labels for the new PVC.
  # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector)
  selectorLabels: { }
  # -- DataSource option for cloning an existing volume or creating from a snapshot for a new PVC.
  # See [values.yaml](values.yaml) for more details.
  dataSource: { }
    # # For cloning from an existing volume
    # # See [https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/](https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/)
    # kind: PersistentVolumeClaim
    # name: pvc-1

    # # For creating from a snapshot (here AWS)
    # # [https://aws.amazon.com/blogs/containers/migrating-amazon-eks-clusters-from-gp2-to-gp3-ebs-volumes/](https://aws.amazon.com/blogs/containers/migrating-amazon-eks-clusters-from-gp2-to-gp3-ebs-volumes/)
    # name: imported-aws-snapshot
  # kind: VolumeSnapshot
  # apiGroup: snapshot.storage.k8s.io

# Service settings for the runner
service:
  # -- Either ClusterIP, NodePort or LoadBalancer for the runner
  # See [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
  type: ClusterIP
  # -- Port where the service will be exposed
  port: 8080
  # -- Annotations for the service.
  # See AWS, see [https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws](https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws)
  # For Azure, see [https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations](https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations)
  annotations: { }
  # -- A list of CIDR ranges to whitelist for ingress traffic to the service if type is LoadBalancer.
  # If list is empty, Kubernetes allows traffic from 0.0.0.0/0
  loadBalancerSourceRanges:
  # - 8.8.8.8/32
  # - 8.8.4.4/32
  # -- A static IP address for the LoadBalancer if type is LoadBalancer.
  # Note: This only applies to certain Cloud providers like Google or [Azure](https://docs.microsoft.com/en-us/azure/aks/static-ip).
  # [https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer](https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer).
  loadBalancerIP: ""

# Settings for using SecretProviderClass (CSI Secrets driver) instead of Secret.
secretProviderClass:
  # -- Whether to use CSI Secrets Store (e.g. Azure Key Vault) instead of "traditional" Kubernetes Secret.
  # NOTE: DO ENABLE, NOT TESTED YET!
  enabled: false
  # -- API Version of the SecretProviderClass
  apiVersion: "secrets-store.csi.x-k8s.io/v1"
  # -- Spec for the SecretProviderClass.
  # Note: The orgAccountJson must be mounted as objectAlias orgAccountJson
  spec: { }
    ## Sample for AWS:
    # provider: aws
    # parameters:
    #   objects: |
    #     - objectName: "TODO: ARN or Name of Secret"
    #       objectType: "secretsmanager"
    #       jmesPath:
    #         - path: envJson
    #           objectAlias: env.json
  #         - path: apihubJson
  #           objectAlias: apihub.json



# -- Secret(s) for pulling an container image from a private registry.
# Used for all images.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: [ ]
# -- nameOverride replaces the name of the chart in the Chart.yaml file, when this is used to construct Kubernetes object names.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
nameOverride: ""
# -- fullnameOverride completely replaces the generated name.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
fullnameOverride: ""
# -- Override the deployment namespace.
# Very useful for multi-namespace deployments in combined charts
namespaceOverride: ""

# -- Node Selectors in order to assign pods to certain nodes.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
nodeSelector: { }

# -- Tolerations for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: [ ]

# -- Affinity for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
affinity: { }

# Config Settings for creating Kubernetes VolumeSnapshots on upgrades.
volumeSnapshots:
  # -- Whether to create snapshots before helm upgrading or not.
  # The name of the VolumeSnapshot will be "<helm release name>-upgrade-to-revision-<helm revision>-<UTC timestamp YYYYMMDDHHMM>", e.g. "outfinity-gift-upgrade-to-revision-19-202206221211"
  preUpgradeEnabled: false
  # -- Whether to create final snapshot before delete.
  # The name of the VolumeSnapshot will be "<helm release name>-final-<UTC timestamp YYYYMMDDHHMM>", e.g. "outfinity-gift-final-202206221213"
  finalSnapshotEnabled: false
  # -- API Version of the "snapshot.storage.k8s.io" resource.
  # See [https://kubernetes.io/docs/concepts/storage/volume-snapshots/](https://kubernetes.io/docs/concepts/storage/volume-snapshots/)
  apiVersion: "v1"
  # -- The Volume Snapshot class name to use for the pre-upgrade and the final snapshot.
  # It is stongly recommended to use a class with 'deletionPolicy: Retain' for the pre-upgrade and final snapshots.
  # Otherwise you will loose the snapshot on your storage system if the Kubernetes VolumeSnapshot will be deleted (e.g. if the namespace will be deleted).
  # See [https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes/](https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes/)
  className: ""
  # -- Whether to wait until the VolumeSnapshot is ready to use.
  # Note: On first snapshot this may take a while.
  waitForReadyToUse: true

# -- An array of extra resources that will be deployed.
# This is useful e.g. for custom resources like SnapshotSchedule provided by [https://github.com/backube/snapscheduler](https://github.com/backube/snapscheduler).
extraResources:
# - |
#   apiVersion: snapscheduler.backube/v1
#   kind: SnapshotSchedule
#   metadata:
#     name: daily
#   spec:
#     retention:
#       maxCount: 30
#     schedule: 30 0 * * *
#
# - |
#   apiVersion: snapscheduler.backube/v1
#   kind: SnapshotSchedule
#   metadata:
#     name: hourly
#   spec:
#     retention:
#       maxCount: 24
#     schedule: 15 * * * *
# Ingress settings for the runner